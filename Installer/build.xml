<!-- ======================================================================          

     ant tasks for PoorMansCMS' Installer  
     
     Hint: These targets don't check if poormans' build process was successfull.
           This have to be checked before!
           
     ====================================================================== -->


<project name="PoorMansCMS-Installer" basedir="../" default="build">

	<!-- properties -->
	<property name="project.dir" value="${basedir}/Installer"/>
	<property name="poormans_home" value="${basedir}"/>
	
	<property file="${project.dir}/installer.properties"/>
	<property file="${poormans_home}/${pmcms.dir.src}/de/thischwa/pmcms/configuration/common.properties" />

	<property name="dir.dist" location="${project.dir}/dist"/>
	<property name="izpack.dir" location="${project.dir}/IzPack"/>
	<property name="izpack.dir.swt" value="${izpack.dir}/packs/swt"/>
	
	<property name="manifest-built-by" value="build.xml:${pmcms.name}_${pmcms.version}"/>

	<property name="dir.lib" location="${poormans_home}/${pmcms.dir.lib}"/>

	<property name="launcher.dir" location="${project.dir}/launcher"/>
	<property name="launcher.jar" location="${dir.dist}/start.jar"/>
	<property name="classes.jar" location="${dir.dist}/${pmcms.name}_classes.jar"/>

	<property name="swt-version" value="swt-4.2.1"/>
	<property name="arch.win" value="win32-win32-x86"/>
	<property name="arch.linux" value="gtk-linux-x86"/>
	<property name="arch.osx" value="cocoa-macosx"/>

	<property name="tmp.zip.swt.linux-gtk" value="${dir.tmp}/${swt-version}-${arch.linux}.zip"/>
	<property name="tmp.zip.swt.win32" value="${dir.tmp}/${swt-version}-${arch.win}.zip"/>
	<property name="tmp.zip.swt.osx" value="${dir.tmp}/${swt-version}-${arch.osx}.zip"/>


	<!-- compile the project -->
	<target name="compile">		
		<delete dir="${pmcms.dir.classes}" />		
		<mkdir dir="${pmcms.dir.classes}"/>
		<path id="libs">
			<fileset dir="${pmcms.dir.lib}" includes="**/*.jar" />
			<fileset dir="${pmcms.dir.src}" excludes="**/package-info.java"/>
			<fileset dir="dev_lib_swt" includes="**/*.jar"/>
		</path>
		<javac destdir="${pmcms.dir.classes}" failonerror="true" classpathref="libs" srcdir="${pmcms.dir.src}" includeantruntime="false"/>
		<copy todir="${pmcms.dir.classes}">
			<fileset dir="${pmcms.dir.src}" includes="**/*.properties" />
		</copy>
	</target>
	
	
	<!-- build the installer -->
    <target name="build" depends="compile" description="Build the installer and dependent jars.">
    	<delete dir="${dir.dist}"/>
    	<mkdir dir="${dir.dist}"/>
    	<antcall target="build.classes"/>
    	<antcall target="build.launcher"/>
    	<antcall target="build.installer"/>
    </target>
	
	
	<!-- build the launcher jar -->
    <target name="build.launcher">
		<path id="manifestPath">
			<fileset dir="${pmcms.dir.lib}">
				<include name="ant-*.jar"/>
				<include name="commons-logging-*.jar"/>
				<include name="commons-lang-*.jar"/>
				<include name="commons-cli-*.jar"/>
				<include name="commons-io-*.jar"/>
				<include name="log4j-*.jar"/>
			</fileset>
		</path>
    	<pathconvert property="fixedPath" pathsep=" ">
    		<path refid="manifestPath"/>
    		<map from="${basedir}/" to=""/>
    	</pathconvert>
    	<jar destfile="${launcher.jar}">
    		<fileset dir="${pmcms.dir.classes}">
			    <include name="de/thischwa/pncms/tool/launcher/**/*class"/>
			    <include name="de/thischwa/pncms/tool/OS/**/*class"/>
			    <include name="de/thischwa/pncms/server/Action.class"/>
			    <include name="de/thischwa/pncms/Constants.class"/>
    			<include name="de/thischwa/pncms/tool/XY.class"/>
    			<include name="de/thischwa/pncms/tool/InternalAntTool*.class"/>
    			<include name="de/thischwa/pncms/tool/CliParser.class"/>
    			<include name="de/thischwa/pncms/configuration/BasicConfigurator.class"/>
    			<include name="de/thischwa/pncms/configuration/common.properties"/>
    			<include name="de/thischwa/pncms/tool/PropertiesTool.class"/>
			</fileset>
    		<manifest>
    			<attribute name="Main-Class" value="de.thischwa.pmcms.tool.launcher.Launcher"/>
    		    <attribute name="Built-By" value="${manifest-built-by}"/>
    			<attribute name="Class-Path" value="${fixedPath}"/>
    		</manifest>
    	</jar>
    </target>
	
	
	<!-- build the poormans classes jar -->
	<target name="build.classes" description="Build the classes jar.">
		<jar destfile="${classes.jar}">
			<fileset dir="${pmcms.dir.classes}">
   				<include name="**/*.*"/>
    			<exclude name="de/thischwa/pmcms/tool/launcher/**/*.class"/>
			</fileset>
			<manifest>
				<attribute name="Built-By" value="${manifest-built-by}"/>
				<attribute name="Url" value="http://poormans.sourceforge.net"/>
				<attribute name="Implementation-Title" value="Poor Man's CMS"/>
				<attribute name="Implementation-Version" value="${pmcms.version}"/>
    			<attribute name="PreMain-Class" value="de.thischwa.pmcms.Starter"/>
			</manifest>
		</jar>
	</target>
	
	<!-- build the installer with 4.3.5
	<target name="build.installer" description="Build the IzPack installer.">  
	   	<taskdef name="izpack" 	classpath="${izpack_home}/lib/compiler.jar" classname="com.izforge.izpack.ant.IzPackTask"/>	
	   	<izpack output="${dir.dist}/${pmcms.name}_${pmcms.version}.jar" 
	   		input="installer.xml" installerType="standard" basedir="${basedir}" izPackDir="${izpack_home}/"
	   		inheritall="true"        
	   		compression="deflate"
	        compressionlevel="9"/>
	</target> -->
	
	<!-- build the installer 5.0.0 -->
	<target name="build.installer" description="Build the IzPack installer.">  
		<path id="izpackpath">
			<fileset dir="${izpack_home}/lib">
			    <include name="*.jar"/>
			</fileset>
		</path>
	   	<taskdef name="izpack" classpathref="izpackpath" classname="com.izforge.izpack.ant.IzPackTask"/>	
	   	<izpack output="${dir.dist}/${pmcms.name}_${pmcms.version}.jar" 
	   		input="installer.xml" installerType="standard" basedir="${basedir}" izPackDir="${izpack_home}/"
	   		inheritall="true"        
	   		compression="deflate"
	        compressionlevel="9"/>
	</target>
	
	
	<!-- extracts the required swt jar from the arch zips -->
    <target name="extractswt" description="Extracts the required swt jar from the arch zips.">
        <antcall target="extractswtjar">
        	<param name="zip.file" value="${tmp.zip.swt.osx}"/>
        	<param name="arch.type" value="${arch.osx}"/>
        </antcall>
        <antcall target="extractswtjar">
        	<param name="zip.file" value="${tmp.zip.swt.linux-gtk}"/>
        	<param name="arch.type" value="${arch.linux}"/>
        </antcall>
        <antcall target="extractswtjar">
        	<param name="zip.file" value="${tmp.zip.swt.win32}"/>
        	<param name="arch.type" value="${arch.win}"/>
        </antcall>
    </target>

    <target name="extractswtjar">
    	<property name="dir.tmp.swt" value="${dir.tmp}/swt"/>
    	<delete dir="${dir.tmp.swt}"/>
    	<mkdir dir="${dir.tmp.swt}"/>
    	<unzip src="${zip.file}" dest="${dir.tmp.swt}">
    	    <patternset>
    	        <include name="swt.jar"/>
    	    </patternset>
    	</unzip>
    	<move file="${dir.tmp.swt}/swt.jar" tofile="${pmcms.dir.lib}/swt/swt-${arch.type}.jar"/>
    	<delete dir="${dir.tmp.swt}"/>
    </target>

</project>